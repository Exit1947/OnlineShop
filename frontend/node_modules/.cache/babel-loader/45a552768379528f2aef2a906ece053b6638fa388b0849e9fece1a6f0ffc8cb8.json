{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mari\\\\Desktop\\\\DYPLOM\\\\Logo Ominfy\\\\OnlineShop\\\\frontend\\\\src\\\\components\\\\dropmenu\\\\Dropdown.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './dropdown.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialCountries = ['Ukraine', 'USA', 'Canada', 'Germany', 'France'];\nconst additionalCountries = ['Italy', 'Spain', 'Japan', 'China', 'India'];\nconst Dropdown = () => {\n  _s();\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [showMore, setShowMore] = useState(false);\n  const handleDropdownToggle = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleCountrySelect = country => {\n    setSelectedCountry(country);\n    setIsOpen(false);\n    setShowMore(false);\n  };\n  const handleShowMore = () => {\n    setShowMore(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: selectedCountry || 'Ukraine'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dropdown-toggle\",\n        onClick: handleDropdownToggle,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `arrow ${isOpen ? 'open' : ''}`,\n          children: \"\\u25BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-menu-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"dropdown-menu\",\n        children: [initialCountries.map((country, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleCountrySelect(country),\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"country-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"country\",\n              value: country,\n              checked: selectedCountry === country,\n              onChange: () => handleCountrySelect(country)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this), \" \", country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)), showMore && additionalCountries.map((country, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleCountrySelect(country),\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"country-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"country\",\n              value: country,\n              checked: selectedCountry === country,\n              onChange: () => handleCountrySelect(country)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), \" \", country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), !showMore && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"learn-more\",\n        onClick: handleShowMore,\n        children: \"Learn more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Dropdown, \"kwXqxdVd5os58NHqGo/6txCmvHU=\");\n_c = Dropdown;\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","initialCountries","additionalCountries","Dropdown","_s","selectedCountry","setSelectedCountry","isOpen","setIsOpen","showMore","setShowMore","handleDropdownToggle","handleCountrySelect","country","handleShowMore","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","type","name","value","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Mari/Desktop/DYPLOM/Logo Ominfy/OnlineShop/frontend/src/components/dropmenu/Dropdown.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './dropdown.css';\r\n\r\nconst initialCountries = [\r\n'Ukraine',\r\n 'USA',\r\n 'Canada',\r\n 'Germany',\r\n 'France',\r\n];\r\n\r\nconst additionalCountries = [\r\n'Italy',\r\n 'Spain',\r\n 'Japan',\r\n 'China',\r\n 'India',\r\n];\r\n\r\nconst Dropdown = () => {\r\n  const [selectedCountry, setSelectedCountry] = useState('');\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [showMore, setShowMore] = useState(false);\r\n\r\n  const handleDropdownToggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleCountrySelect = (country) => {\r\n    setSelectedCountry(country);\r\n    setIsOpen(false);\r\n    setShowMore(false); \r\n  };\r\n\r\n  const handleShowMore = () => {\r\n    setShowMore(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <div className=\"dropdown-header\">\r\n        <span>{selectedCountry || 'Ukraine'}</span>\r\n        <button className=\"dropdown-toggle\" onClick={handleDropdownToggle}>\r\n          <span className={`arrow ${isOpen ? 'open' : ''}`}>&#9660;</span>\r\n        </button>\r\n      </div>\r\n      {isOpen && (\r\n        <div className=\"dropdown-menu-container\">\r\n          <ul className=\"dropdown-menu\">\r\n            {initialCountries.map((country, index) => (\r\n              <li key={index} onClick={() => handleCountrySelect(country)}>\r\n                <label className=\"country-option\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"country\"\r\n                    value={country}\r\n                    checked={selectedCountry === country}\r\n                    onChange={() => handleCountrySelect(country)}\r\n                  />\r\n                  <span className=\"dot\"></span> {country}\r\n                </label>\r\n              </li>\r\n            ))}\r\n            {showMore && additionalCountries.map((country, index) => (\r\n              <li key={index} onClick={() => handleCountrySelect(country)}>\r\n                <label className=\"country-option\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"country\"\r\n                    value={country}\r\n                    checked={selectedCountry === country}\r\n                    onChange={() => handleCountrySelect(country)}\r\n                  />\r\n                  <span className=\"dot\"></span> {country}\r\n                </label>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          {!showMore && (\r\n            <button className=\"learn-more\" onClick={handleShowMore}>Learn more</button>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}